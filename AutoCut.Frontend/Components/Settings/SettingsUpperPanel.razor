@inject IDispatcher Dispatcher
@inject IState<SettingsState> SettingsState
@*@inject NavigationManager NavigationManager*@
@using AutoCut.Frontend.Stores.Settings
@using AutoCut.Frontend.Stores.Settings.Actions
@using AutoCut.Core.Optimization
@using System.Globalization
@using AutoCut.Frontend.Localization
@inherits FluxorComponent

<div class="settings-upper-panel">
    Blade thickness / Kerf
    <MudNumericField
        Margin="Margin.Dense"
        T="decimal"
        AdornmentText="mm"
        Adornment="Adornment.End"
        AdornmentColor="Color.Info"
        Class="mb-8"
        @bind-Value="OptimizerOptions.BladeThickness"/>

    Stock panel size
    <MudNumericField
        Margin="Margin.Dense"
        T="decimal"
        Label="Length"
        AdornmentText="mm"
        Adornment="Adornment.End"
        AdornmentColor="Color.Info"/>
    <MudNumericField
        Margin="Margin.Dense"
        T="decimal"
        Label="Width"
        AdornmentText="mm"
        Adornment="Adornment.End"
        AdornmentColor="Color.Info"/>
    <MudNumericField
        Margin="Margin.Dense"
        T="decimal"
        Label="Thickness"
        AdornmentText="mm"
        Adornment="Adornment.End"
        AdornmentColor="Color.Info"
        Class="mb-8"/>

    Stock panel edge cutting thickness
    <MudNumericField
        Margin="Margin.Dense"
        T="decimal"
        AdornmentText="mm"
        Adornment="Adornment.End"
        AdornmentColor="Color.Info"
        Class="mb-8"
        @bind-Value="OptimizerOptions.StockPanelEdgeCuttingThickness"/>

    Edge banding thickness
    <MudNumericField
        Margin="Margin.Dense"
        T="decimal"
        AdornmentText="mm"
        Adornment="Adornment.End"
        AdornmentColor="Color.Info"
        Class="mb-8"
        @bind-Value="OptimizerOptions.EdgeBandingThickness"/>

    Language
    <MudSelect @bind-Value="Culture" Variant="Variant.Text">
        @foreach (var culture in AppLocalizationInfo.SupportedCultures)
        {
            <MudSelectItem Value="@culture">@culture.DisplayName</MudSelectItem>
        }
    </MudSelect>

    <MudButton
        Variant="Variant.Outlined"
        Color="Color.Success"
        StartIcon="@Icons.Material.Filled.Save"
        Class="mb-8"
        OnClick="UpdateBladeThickness">
        Save
    </MudButton>
</div>

@code
{
    private OptimizerOptions OptimizerOptions { get; set; } = new();

    private CultureInfo Culture { get; set; } = new("en-US");

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            OptimizerOptions = SettingsState.Value.OptimizerOptions;
        }
    }

    // TODO: Change name
    private void UpdateBladeThickness()
    {
        Dispatcher.Dispatch(new UpdateOptimizerOptionsAction(OptimizerOptions));
        Dispatcher.Dispatch(new UpdateCultureAction(Culture));
    // TODO: Add this (3 lines after CultureInfo..., including itself) after implementing persisting state to local storage
    // after culture change page has to be reloaded but when state ain't persisted culture change is lost
    // TODO: Add check if culture is different than current to avoid unnecessary reload
    //CultureInfo.DefaultThreadCurrentCulture = Culture;
    //CultureInfo.DefaultThreadCurrentUICulture = Culture;
    //NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }
}