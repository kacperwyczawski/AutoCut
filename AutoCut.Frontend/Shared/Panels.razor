@using AutoCut.Core.Panels

<MudTable Items="_panels">
    <HeaderContent>
        <MudTh>Length</MudTh>
        <MudTh>Width</MudTh>
        <MudTh>
            <MudTooltip Text="Quantity">
                Qty
            </MudTooltip>
        </MudTh>
        <MudTh>Name</MudTh>
        <MudTh>
            <MudTooltip Text="along length, along width">
                Edge banding
            </MudTooltip>
        </MudTh>
    </HeaderContent>
    <RowTemplate Context="panel">
        <MudTd>@panel.Panel.Rectangle.Length</MudTd>
        <MudTd>@panel.Panel.Rectangle.Width</MudTd>
        <MudTd>@panel.Quantity</MudTd>
        <MudTd>@panel.Panel.Name</MudTd>
        <MudTd>@GetEdgeBanding(panel.Panel)</MudTd>
    </RowTemplate>
</MudTable>

@code
{
    // temporary data
    private readonly List<CompressedPanel> _panels = Enumerable.Repeat(
        new CompressedPanel(
            new Panel(
                new Rectangle(100, 100),
                new EdgeBanding(true, true, false, false),
                "Name"),
            1),
        20).ToList();

    static string GetEdgeBanding(Panel panel)
    {
        int BoolToInt(bool b) => b ? 1 : 0;

        var alongLength = BoolToInt(panel.EdgeBanding.Top) + BoolToInt(panel.EdgeBanding.Bottom);
        var alongWidth = BoolToInt(panel.EdgeBanding.Left) + BoolToInt(panel.EdgeBanding.Right);
        
        return $"{alongLength}, {alongWidth}";
    }
}